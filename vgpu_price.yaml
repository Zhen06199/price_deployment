# 1. Service Account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pricing-sa
  namespace: default

---
# 2. Cluster Role
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: pricing-role
rules:
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["metrics.k8s.io"]
  resources: ["nodes"]
  verbs: ["get", "list"]

---
# 3. Cluster Role Binding
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: pricing-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: pricing-role
subjects:
- kind: ServiceAccount
  name: pricing-sa
  namespace: default

---
# 4. Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vgpu-price
  labels:
    app: vgpu-pricing
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vgpu-pricing
  template:
    metadata:
      labels:
        app: vgpu-pricing
        prometheus: scrape
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
    spec:
      imagePullSecrets:
        - name: regcred
      serviceAccountName: pricing-sa
      containers:
      - name: pricing-container
        image: zhen06199/vgpu_price:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          hostPort: 8082
          protocol: TCP
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName

---
# 5. Service
apiVersion: v1
kind: Service
metadata:
  name: vgpu-price
  labels:
    app: vgpu-pricing
spec:
  selector:
    app: vgpu-pricing
  ports:
  - protocol: TCP
    port: 8000
    targetPort: 8000
  type: ClusterIP
